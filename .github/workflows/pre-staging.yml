name: Pre-Staging

# only run on pull requests from another branch into staging, not from staging into master
on:
  pull_request:
    branches: [ '!master', staging ]

jobs:

    build-test-push:

        runs-on: ubuntu-latest

        steps:
        - name: Check out code
          uses: actions/checkout@v2

        # Build and test the application
        - name: Build the image and run unit tests
          env:
            ENV_ARG: staging
            SECRET_KEY_ARG: ${{ secrets.DJAGNO_SECRET_KEY }}
            DB_HOST_ARG: ${{ secrets.STAGING_DB_HOST }}
            DB_NAME_ARG: ${{ secrets.STAGING_DB_NAME }}
            DB_USER_ARG: ${{ secrets.STAGING_DB_USER }}
            DB_PASS_ARG: ${{ secrets.STAGING_DB_PASS }}
          run: |
            docker-compose -f docker-compose.staging.yml \
            run app sh -c "python manage.py test && flake8"

#         - name: Build, tag, and push image to DockerHub
#           uses: docker/build-push-action@v1.1.0
#           with:
#             username: ${{ secrets.DOCKER_USERNAME }}
#             password: ${{ secrets.DOCKER_PASSWORD }}
#             repository: daltondpws/pipeline-test
#             tags: v0.1
#             build_args: DB_HOST_ARG=${{ secrets.TEST_DB_HOST }},DB_NAME_ARG=${{ secrets.TEST_DB_NAME }},DB_USER_ARG=${{ secrets.TEST_DB_USER }},DB_PASS_ARG=${{ secrets.TEST_DB_PASS }}

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-1

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Build, tag, and push Docker image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ secrets.STAGING_ECR_REPO }}
            IMAGE_TAG: ${{ secrets.STAGING_IMAGE_TAG }}
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            --build-arg ENV_ARG=staging \
            --build-arg SECRET_KEY_ARG=${{ secrets.DJAGNO_SECRET_KEY }}
            --build-arg DB_HOST_ARG=${{ secrets.STAGING_DB_HOST }} \
            --build-arg DB_NAME_ARG=${{ secrets.STAGING_DB_NAME }} \
            --build-arg DB_USER_ARG=${{ secrets.STAGING_DB_USER }} \
            --build-arg DB_PASS_ARG=${{ secrets.STAGING_DB_PASS }} \
            .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
